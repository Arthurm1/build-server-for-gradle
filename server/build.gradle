plugins {
    id 'application'
}

dependencies {
    implementation project(':model')
    // keep bsp version in sync with com.microsoft.java.bs.core.Constants.BSP_VERSION
    implementation 'ch.epfl.scala:bsp4j:2.2.0-M2'
    implementation 'org.apache.commons:commons-lang3:3.17.0'

    testImplementation(platform('org.junit:junit-bom:5.11.4'))
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation 'org.mockito:mockito-core:5.15.2'
    testImplementation 'org.mockito:mockito-junit-jupiter:5.15.2'
}

java {
  toolchain {
    languageVersion = JavaLanguageVersion.of(17)
  }
}

tasks.withType(JavaCompile) {
  options.compilerArgs += ['-Xlint']
}

application {
    mainClass = 'com.microsoft.java.bs.core.Launcher'
}

jar {
  archiveFileName = "server.jar"
  metaInf {
    from 'src/main/resources/NOTICE.txt'
  }
  manifest {
    attributes 'Implementation-Version': version
  }
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
        exceptionFormat "full"
    }
}

task generateInitScript() {
  doLast {
    def initScript = file("$buildDir/libs/plugins/init.gradle")
    initScript.parentFile.mkdirs()
    initScript.write """
initscript {
  dependencies {
    classpath files('plugin-${version}.jar')
  }
}
  allprojects {
    apply plugin: com.microsoft.java.bs.gradle.plugin.GradleBuildServerPlugin
  }
"""
  }
}

task copyRuntimeLibs(type: Copy) {
  from configurations.runtimeClasspath
  into "$buildDir/libs/runtime"
}

processResources {
  dependsOn(':plugin:copyJar')
  dependsOn copyRuntimeLibs
  dependsOn(':server:generateInitScript')
  duplicatesStrategy = 'include'
  exclude 'NOTICE.txt'
}
